[{"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\index.tsx":"1","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\store.ts":"3","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\layout\\App.tsx":"4","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\userStore.ts":"5","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\activityStore.ts":"6","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\commonStore.ts":"7","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\layout\\navbar.tsx":"8","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\home\\HomePage.tsx":"9","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\TestErrors.tsx":"10","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\ServerError.tsx":"11","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\NotFound.tsx":"12","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\users\\LoginForm.tsx":"13","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"14","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"15","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"16","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\api\\agent.ts":"17","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"18","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"19","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"20","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"21","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\MySelectInput.tsx":"22","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"23","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\MyDateInput.tsx":"24","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"25","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"26","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\MyTextArea.tsx":"27","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"28","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetaledHeader.tsx":"29","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"30","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"31","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\modalStore.ts":"32","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"33","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\users\\RegisterForm.tsx":"34"},{"size":1008,"mtime":1664233406884,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1664233406884,"results":"37","hashOfConfig":"36"},{"size":706,"mtime":1664297913193,"results":"38","hashOfConfig":"36"},{"size":2223,"mtime":1664299772150,"results":"39","hashOfConfig":"36"},{"size":1614,"mtime":1664309487691,"results":"40","hashOfConfig":"36"},{"size":4327,"mtime":1664233406875,"results":"41","hashOfConfig":"36"},{"size":871,"mtime":1664293084571,"results":"42","hashOfConfig":"36"},{"size":1619,"mtime":1664291102508,"results":"43","hashOfConfig":"36"},{"size":1544,"mtime":1664309485604,"results":"44","hashOfConfig":"36"},{"size":2024,"mtime":1664233406882,"results":"45","hashOfConfig":"36"},{"size":762,"mtime":1664233406882,"results":"46","hashOfConfig":"36"},{"size":541,"mtime":1664233406882,"results":"47","hashOfConfig":"36"},{"size":1428,"mtime":1664308315727,"results":"48","hashOfConfig":"36"},{"size":940,"mtime":1664294286207,"results":"49","hashOfConfig":"36"},{"size":4065,"mtime":1664233406880,"results":"50","hashOfConfig":"36"},{"size":1327,"mtime":1664233406879,"results":"51","hashOfConfig":"36"},{"size":2958,"mtime":1664294194182,"results":"52","hashOfConfig":"36"},{"size":433,"mtime":1664311153113,"results":"53","hashOfConfig":"36"},{"size":371,"mtime":1664233406873,"results":"54","hashOfConfig":"36"},{"size":580,"mtime":1664233406877,"results":"55","hashOfConfig":"36"},{"size":817,"mtime":1664233406877,"results":"56","hashOfConfig":"36"},{"size":945,"mtime":1664233406881,"results":"57","hashOfConfig":"36"},{"size":266,"mtime":1664233406872,"results":"58","hashOfConfig":"36"},{"size":766,"mtime":1664233406880,"results":"59","hashOfConfig":"36"},{"size":2224,"mtime":1664233406879,"results":"60","hashOfConfig":"36"},{"size":2413,"mtime":1664233406878,"results":"61","hashOfConfig":"36"},{"size":652,"mtime":1664233406881,"results":"62","hashOfConfig":"36"},{"size":1728,"mtime":1664233406878,"results":"63","hashOfConfig":"36"},{"size":2095,"mtime":1664233406879,"results":"64","hashOfConfig":"36"},{"size":651,"mtime":1664233406872,"results":"65","hashOfConfig":"36"},{"size":1673,"mtime":1664233406878,"results":"66","hashOfConfig":"36"},{"size":511,"mtime":1664297915869,"results":"67","hashOfConfig":"36"},{"size":524,"mtime":1664299849789,"results":"68","hashOfConfig":"36"},{"size":2037,"mtime":1664310841572,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"kujnj9",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\index.tsx",[],["143","144"],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\store.ts",["145"],"import { createContext, useContext } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore:CommonStore;\r\n    userStore:UserStore;\r\n    modalStore: ModalStore;\r\n}\r\n\r\nexport const store: Store = {\r\n   activityStore: new ActivityStore(),\r\n   commonStore: new CommonStore(),\r\n   userStore:new UserStore(),\r\n   modalStore: new ModalStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\userStore.ts",["146"],"import { error } from \"console\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null=null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds:UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user=user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }catch (error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push ('/');\r\n\r\n    }\r\n    getUser = async () =>{\r\n        try{\r\n            const user= await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register  = async (creds: UserFormValues) => {\r\n        try{\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user=user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }catch (error){\r\n            throw error;\r\n        }\r\n\r\n    }\r\n}","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\layout\\navbar.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\home\\HomePage.tsx",["147"],"import { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment , Image, Button} from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer (function HomePage() {\r\n    const {userStore, modalStore} = useStore();\r\n    return (\r\n     <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n         <Container text>\r\n             <Header as='h1' inverted>\r\n                 <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}} />\r\n                 Reactivities\r\n             </Header>\r\n             {userStore.isLoggedIn ? (\r\n                <>\r\n                <Header as='h2' inverted content='Welcome to Reactivities'/>\r\n                <Button as={Link} to='/activities' size='huge' inverted>\r\n                 Go to Activities!\r\n                </Button>\r\n                </>\r\n                \r\n             ) : (\r\n                <>\r\n                  <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n                 Login!\r\n         </Button>\r\n             <Button onClick={() => modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\r\n                Register!\r\n         </Button>\r\n                </>\r\n             )}\r\n             \r\n         </Container>\r\n     </Segment>\r\n    )\r\n\r\n})","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\TestErrors.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\ServerError.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\NotFound.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\users\\LoginForm.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\api\\agent.ts",["148"],"import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { config } from 'process';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity } from '../models/activity';\r\nimport { User, UserFormValues } from '../models/User';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.request.use(config =>{\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {  \r\n        await sleep(1000);\r\n        return response;\r\n}, (error:AxiosError) => {\r\n    const {data,status,config} = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if(typeof data === 'string'){\r\n                toast.error(data);\r\n            }\r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors){\r\n                const modalStateErrors =[];\r\n                for (const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorized');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n} )\r\n\r\nconst responseBody = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put:<T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del:<T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n  list: () => requests.get<Activity[]>('/activities' ),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: Activity) =>axios.post<void>('/activities',activity),\r\n  update: (activity: Activity) =>axios.put<void>(`/activities/${activity.id}` , activity),\r\n  delete: (id: string) => axios.delete<void>(`/activities/${id}`)\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login:(user:UserFormValues) => requests.post<User>('/account/login',user),\r\n    register:(user:UserFormValues) => requests.post<User>('/account/register',user)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account\r\n\r\n}\r\nexport default agent;","C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\MySelectInput.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\MyDateInput.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\form\\MyTextArea.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\details\\ActivityDetaledHeader.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Users\\Ardit\\Documents\\reactivities\\Reactivities2\\client-app\\src\\features\\users\\RegisterForm.tsx",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":15},{"ruleId":"153","severity":1,"message":"157","line":1,"column":10,"nodeType":"155","messageId":"156","endLine":1,"endColumn":15},{"ruleId":"153","severity":1,"message":"158","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":24},{"ruleId":"153","severity":1,"message":"159","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":16},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'error' is defined but never used.","'LoadingComponent' is defined but never used.","'config' is defined but never used.","no-global-assign","no-unsafe-negation"]